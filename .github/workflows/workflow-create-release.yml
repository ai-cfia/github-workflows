---
name: Create release, build and push to ghcr with specific tag

on:
  workflow_call:
    inputs:
      artifact-name:
        required: true
        type: string
      registry:
        required: true
        type: string

jobs:
  release:
    name: Create GitHub Release, build and push to ghcr with specific tag
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract current tag name
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Generate changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v5
        with:
          configurationJson: |
            {
                "categories": [
                    {
                        "title": "## User stories üëë",
                        "labels": ["epic"]
                    },
                    {
                        "title": "## New features üéâ",
                        "labels": ["feature"]
                    },
                    {
                        "title": "## Bug fixes üêõ",
                        "labels": ["bug"]
                    },
                    {
                        "title": "## Documentation üìÑ",
                        "labels": ["documentation"]
                    },
                    {
                        "title": "## Other Changes üí¨",
                        "labels": ["*"]
                    }
                ],
                "template": "#{{CHANGELOG}}\n\nContributors:\n#{{CONTRIBUTORS}}",
                "max_pull_requests": 1000,
                "max_back_track_time_days": 1000
            }
          owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}
          toTag: ${{ env.TAG_NAME }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Zip the directory
        run: |
          mkdir -p release
          zip -r release/repo.zip .

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Release ${{ inputs.artifact-name }} (${{ env.TAG_NAME }})
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/repo.zip
          asset_name: ${{ inputs.artifact-name }}.zip
          asset_content_type: application/zip

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the github container registry (GCR)
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx

      - name: Build and push to ghcr
        id: docker_build_push_and_tag
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ inputs.registry }}/${{ inputs.artifact-name }}:${{ env.TAG_NAME }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: Refresh Cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Image digest (latest)
        if: github.event.pull_request.merged == false
        run: echo ${{ steps.docker_build_push_and_tag.outputs.digest }}
