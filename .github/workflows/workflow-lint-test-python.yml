name: Reusable lint and test workflow for Python projects

on:
    workflow_call:
      inputs:
        threshold:
          required: true
          type: number

permissions:
  actions: read
  pull-requests: write

jobs:
  lint-test:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout code
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.pull_request.head.repo.full_name }}
        ref: ${{ github.event.pull_request.head.ref }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11.x'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff==0.1.0 coverage
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with ruff
      run: |
        # stop the build if there are Python syntax errors or undefined names
        ruff --output-format=github --select=E9,F63,F7,F82 --target-version=py311 .
        # default set of ruff rules with GitHub Annotations
        ruff --output-format=github --target-version=py311 .

    - name: Test and Coverage with unittest
      run: |
        python -m coverage run -m unittest discover -s tests
        COVERAGE=$(python -m coverage report | grep 'TOTAL' | awk '{print $NF}' | sed 's/%//')
        echo "CURRENTCOVERAGE=$COVERAGE" >> $GITHUB_ENV
        python -m coverage report --fail-under=${{ inputs.threshold }}
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LOUIS_DSN: ${{ secrets.LOUIS_DSN }}
        LOUIS_SCHEMA: ${{ secrets.LOUIS_SCHEMA }}
        AZURE_OPENAI_SERVICE: ${{ secrets.AZURE_OPENAI_SERVICE }}
        FINESSE_WEIGHTS: ${{ secrets.FINESSE_WEIGHTS }}
        OPENAI_API_ENGINE: ${{ secrets.OPENAI_API_ENGINE }}
        OPENAI_ENDPOINT: ${{ secrets.OPENAI_ENDPOINT }}
        PGDATABASE: ${{ secrets.PGDATABASE }}
        PGHOST: ${{ secrets.PGHOST }}
        PGPASSWORD: ${{ secrets.PGPASSWORD }}
        PGPORT: ${{ secrets.PGPORT }}
        PGUSER: ${{ secrets.PGUSER }}

    - name: Compare coverage with threshold
      id: compare_values
      run: |
        if [ $(echo "$CURRENTCOVERAGE > ${{ inputs.threshold }}" | bc) -eq 1 ]; then
          echo "update_value=true" >> $GITHUB_OUTPUT
          echo "::set-output name=current_coverage::$CURRENTCOVERAGE"
        else
          echo "update_value=false" >> $GITHUB_OUTPUT
        fi
      shell: /usr/bin/bash -e {0}
      env:
        CURRENTCOVERAGE: ${{ env.CURRENTCOVERAGE }}

    - name: Update file
      if: steps.compare_values.outputs.update_value == 'true'
      uses: richardrigutins/replace-in-files@v2
      with:
        files: '.github/workflows/gcp-deployment.yml'
        search-text: 'threshold: ${{ inputs.threshold }}'
        replacement-text: 'threshold: ${{ steps.compare_values.outputs.current_coverage }}'

    - name: Get PR Info
      if: steps.compare_values.outputs.update_value == 'true'
      uses: minhchienwikipedia/get-pr-info@master
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Push changes
      if: steps.compare_values.outputs.update_value == 'true'
      run: |
        git config --global user.name "GitHub bot"
        git config --global user.email "github@bot.com"
        git add -A
        git commit -m "Update threshold value in workflow"
        git push
