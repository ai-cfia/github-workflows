---
name: Reusable lint and test workflow for Python projects

on:
    workflow_call:

jobs:
    lint-test:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3
            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: '3.11.x'
                  cache: 'pip'
            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install ruff==0.1.0
                if [ -f requirements.txt ]; then \
                  pip install -r requirements.txt; \
                fi
            - name: Lint with ruff
              run: |
                # stop the build if there are Python syntax errors or undefined
                # names
                ruff --output-format=github --select=E9,F63,F7,F82 \
                  --target-version=py311 .
                # default set of ruff rules with GitHub Annotations
                ruff --output-format=github --target-version=py311 .

            - name: Import Secrets from vault
              id: import-secrets
              uses: hashicorp/vault-action@v2
              with:
                  url: https://vault.inspection.alpha.canada.ca:8200
                  method: github
                  githubToken: ${{ secrets.VAULT_TOKEN }}
                  caCertificate: ${{ secrets.VAULT_CA_CERT }}
                  secrets: |
                      kv/data/github-workflows/python-lint-workflow *

            - name: Step following 'Import Secrets'
              run: |
                touch secrets.json
                echo '${{ toJson(steps.import-secrets.outputs) }}' >> secrets.json

            - name: Export Secrets as Environment Variables
              run: |
                for s in $(jq -r 'to_entries | .[] | "\(.key)=\(.value)"' secrets.json)
                do
                  echo "$s" >> $GITHUB_ENV
                done

            - name: Test with unittest
              run: |
                python -m unittest discover -s tests
