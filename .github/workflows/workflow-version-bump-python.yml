name: Reusable version bump check validation workflow for Python projects

on:
  workflow_call:
    inputs:
      pyproject-path:
        required: false
        type: string
      package-name:
        required: false
        type: string

jobs:
  version-bump-check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Parse new version from pyproject.toml
        id: parse_new_version
        run: |
          new_version=$(grep -Po '(?<=^version = ")[^"]*' ${{ inputs.pyproject-path || 'pyproject.toml' }})
          echo "new_version=$new_version" >> $GITHUB_ENV

      - name: Get latest version
        id: get_latest_version
        run: |
          package_name="${{ inputs.package-name }}"
          if [ -z "$package_name" ]; then
            latest_tag=$(git tag --list "v*" --sort=-creatordate | head -n 1)
          else
            latest_tag=$(git tag --list "v*-*${package_name}" --sort=-creatordate | head -n 1)
          fi
          latest_version=$(echo $latest_tag | grep -oP '(?<=v)[0-9]+\.[0-9]+\.[0-9]+')
          echo "latest_version=$latest_version" >> $GITHUB_ENV

      - name: Check version bump
        run: |
          if [ "${{ env.new_version }}" == "${{ env.latest_version }}" ]; then
            echo "Version has not been bumped!"
            exit 1
          else
            echo "Version has been bumped."
          fi
