name: Reusable workflow to build and push docker container to github container registry

on:
  workflow_call:
    inputs:
      container-name:
        required: true
        type: string
      tag:
        required: true
        type: string
      registry:
        required: true
        type: string

jobs:
  build-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v4

      - name: Check if a Dockerfile is present at the root of the repo
        id: check-file
        run: |
          if [ -f Dockerfile ]; then
            echo "::set-output name=exists::true"
          else
            echo "::set-output name=exists::false"
          fi

      - name: Early exit if no Dockerfile is present
        if: steps.check-file.outputs.exists == 'false'
        run: |
          gh run cancel ${{ github.run_id }}
          gh run watch ${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the github container registry (GCR)
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx

      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch_name

      - name: Build and push (3 tags | commit number, pr number and branch name) (unmerged)
        id: docker_build_and_tag_unmerged
        if: github.event.pull_request.merged == false
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ inputs.registry }}/${{ inputs.container-name }}:${{ github.event.number }}
            ${{ inputs.registry }}/${{ inputs.container-name }}:${{ inputs.tag }}
            ${{ inputs.registry }}/${{ inputs.container-name }}:${{ steps.extract_branch_name.outputs.branch }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: Build and push (2 tags | commit number and branch name) (merged)
        id: docker_build_and_tag_merged
        if: github.event.pull_request.merged == true
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ inputs.registry }}/${{ inputs.container-name }}:${{ inputs.tag }}
            ${{ inputs.registry }}/${{ inputs.container-name }}:${{ github.event.pull_request.base.ref }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: Refresh Cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Image digest (latest)
        if: github.event.pull_request.merged == false
        run: echo ${{ steps.docker_build_and_tag_unmerged.outputs.digest }}

      - name: Image digest (latest)
        if: github.event.pull_request.merged == true
        run: echo ${{ steps.docker_build_and_tag_merged.outputs.digest }}

  remove-old-image:
    runs-on: ubuntu-latest
    needs: build-push-image
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      - name: Install Python dependencies
        run: pip install requests

      - name: Download the python script from https://github.com/ai-cfia/github-workflows to delete the previous image
        run: |
          curl -LO https://raw.githubusercontent.com/ai-cfia/github-workflows/63-as-a-devops-i-would-like-to-create-a-workflow-to-push-images-to-this-organisation-docker-registry/scripts/remove-old-image.py

      - name: Delete the previous image (unmerged pull request)
        if: github.event.pull_request.merged == false
        run: python remove-old-image.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REGISTRY: ${{ inputs.registry }}
          CONTAINER_NAME: ${{ inputs.container-name }}
          UNIQUE_TAG: ${{ github.event.number }}
          USER: ${{ github.actor }}
          CURRENT_COMMIT: ${{ inputs.tag }}

      - name: Delete the previous image (merged pull request)
        if: github.event.pull_request.merged == true
        run: python remove-old-image.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REGISTRY: ${{ inputs.registry }}
          CONTAINER_NAME: ${{ inputs.container-name }}
          UNIQUE_TAG: ${{ github.event.pull_request.base.ref }}
          USER: ${{ github.actor }}
          CURRENT_COMMIT: ${{ inputs.tag }}
