name: Vercel Static Frontend Deployment

on:
  workflow_call:
    inputs:
      project-name:
        required: true
        type: string
      deployment-environment:
        required: true
        type: string
        description: 'Deployment environment (dev, prd, uat)'

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_PROJECT_NAME: ${{ inputs.project-name}}
  DEPLOYMENT_ENVIRONMENT: ${{ inputs.deployment-environment }}

permissions:
    checks: read
    contents: read
    pull-requests: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:

      - name: checkout code
        uses: actions/checkout@v3

      - name: install node
        uses: actions/setup-node@v3
        with:
          cache: npm
          node-version-file: "package.json"

      - name: install npm
        run: npm install -g npm@9.8.1

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: read from ENV
        uses: alekangelov/secret-envfile@v1
        with:
          content: ${{ secrets.ENVFILE_DEV }}
          filename: .env

      - name: show files
        run: ls

      - uses: hackzcompany/vercel-env-push-action@v4
        with:
          project: ${{ env.VERCEL_PROJECT_NAME }}
          team_id: ${{ secrets.VERCEL_ORG_ID }}
          token: ${{ secrets.VERCEL_TOKEN }}
          environments: 'development,preview'

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: echo "DEPLOYMENT_URL=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})" >> $GITHUB_ENV

      - name: Set URL to dev environment
        run: vc alias "$DEPLOYMENT_URL" ${{ env.VERCEL_PROJECT_NAME }}-${{ env.DEPLOYMENT_ENVIRONMENT }}.vercel.app --token=${{ secrets.VERCEL_TOKEN }}

      - name: Comment on PR with Custom Domain
        if: github.event_name == 'pull_request' && github.event.action == 'opened'
        uses: JoseThen/comment-pr@v1.2.0
        with:
            comment: "Deployment preview URL: https://${{ inputs.project-name }}-${{ inputs.deployment-environment }}.vercel.app/"
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
